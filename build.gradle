plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.google.cloud.tools.jib' version '3.1.2'
}

jib {
	// 도커 베이스 이미지
	from {
		image = "khipu/openjdk17-alpine"
		platforms {
			platform {
				architecture = "arm64"
				os = "linux"
			}
			platform {
				architecture = 'amd64'
				os = 'linux'
			}
		}
	}
	/*
	 아래 링크 참고해서 to.image 변경 후 컨테이너화하기
	 https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#configuration

	 로컬 빌드 시 아래 명령어 사용
	 gradle jibBuildTar
	 */
	to {
		image = "jib.to.image = 'aws_account_id.dkr.ecr.region.amazonaws.com/my-app'"
		tags = ["latest"]
	}
	container {
		jvmFlags = ["-Xms128m", "-Xmx128m"]
	}
}

group = 'com.hidiscuss'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Querydsl
	implementation 'com.querydsl:querydsl-jpa'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	// Swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	// Github REST API Client
	implementation 'org.kohsuke:github-api:1.303'

	//spring security oauth2
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
}

tasks.named('test') {
	useJUnitPlatform()
}

// clean task 실행시 QClass 삭제
clean {
	delete file('src/main/generated')
}